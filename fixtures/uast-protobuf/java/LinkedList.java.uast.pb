
CompilationUnitp
PackageDeclaration
internalRolepackage5

SimpleName
internalRolename"Fall0811*:"package:.◊
ImportDeclaration
onDemandfalse
staticfalse
internalRoleimports˚
QualifiedName
internalRolenameò
QualifiedName
internalRole	qualifier6

SimpleName
internalRole	qualifier"java*:1

SimpleName
internalRolename"util*!::5

SimpleName
internalRolename"Iterator*&::0*:/Ù
ImportDeclaration
internalRoleimports
onDemandfalse
staticfalseò
QualifiedName
internalRolename:

SimpleName
internalRole	qualifier"Summer08*::1

SimpleName
internalRolename"Node*C::0*3:/™Ï
TypeDeclaration
internalRoletypes
	interfacefalse3
Modifier
internalRole	modifiers"public*L7

SimpleName
internalRolename"
LinkedList*Y:h

SimpleType#
internalRolesuperInterfaceTypes5

SimpleName
internalRolename"Iterable*o:∞
FieldDeclaration 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"private*V

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*á:l
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"head*å:±
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*ó	V

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*ü	:l
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"tail*§	:å
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*Ø
1
PrimitiveType
internalRoletype"int*∑
l
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"size*ª
:ï
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*Ãa

SimpleType
internalRolereturnType26

SimpleName
internalRolename"Iterator*”:7

SimpleName
internalRolename"iterator*‹:4Í
Block
internalRolebody≈
ReturnStatement
internalRole
statementsë
ClassInstanceCreation
internalRole
expression\

SimpleType
internalRoletype8

SimpleName
internalRolename"
LLIterator*¸::`:3_^*Ã:E2ç.
TypeDeclaration
	interfacefalse 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*ú8

SimpleName
internalRolename"
LLIterator*™:i

SimpleType#
internalRolesuperInterfaceTypes6

SimpleName
internalRolename"Iterator*¿:µ
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*”V

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*€:p
VariableDeclarationFragment
internalRole	fragments6

SimpleName
internalRolename"nextNode*‡:î
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*Û5
PrimitiveType
internalRoletype"boolean*˚p
VariableDeclarationFragment
internalRole	fragments6

SimpleName
internalRolename"removeOK*É:ì
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*ñ1
PrimitiveType
internalRoletype"int*ûs
VariableDeclarationFragment
internalRole	fragments9

SimpleName
internalRolename"posToRemove*¢:À
MethodDeclaration
constructortrue 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*¬9

SimpleName
internalRolename"
LLIterator* :4Å
Block
internalRolebody˙
ExpressionStatement
internalRole
statements√

Assignment
internalRole
expression
operator=@

SimpleName
internalRoleleftHandSide"nextNode*Â:É=

SimpleName
internalRolerightHandSide"head*:Ñ*Â:Ç:è
ExpressionStatement
internalRole
statementsÿ

Assignment
internalRole
expression
operator=@

SimpleName
internalRoleleftHandSide"removeOK*É:ÉR
BooleanLiteral
internalRolerightHandSide
booleanValuefalse*é:oÑ*É:Ç:Õ
ExpressionStatement
internalRole
statementsñ

Assignment
internalRole
expression
operator=C

SimpleName
internalRoleleftHandSide"posToRemove*¢:Éå
PrefixExpression
internalRolerightHandSide
operator->
NumberLiteral
internalRoleoperand

token1*±:v*∞:Ñ*¢:Ç::3_^*¬:?2ù
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*“<
PrimitiveType
internalRolereturnType2"boolean*Ÿ6

SimpleName
internalRolename"hasNext*·:4ò
Block
internalRolebodyÛ
ReturnStatement
internalRole
statementsø
InfixExpression
internalRole
expression
operator!=>

SimpleName
internalRoleleftOperand"nextNode*Ä:5
NullLiteral
internalRolerightOperand"null:u*Ä::`:3_^*“:E2…
MethodDeclaration 
internalRolebodyDeclarations
constructorfalse4
Modifier
internalRole	modifiers"public*∞_

SimpleType
internalRolereturnType24

SimpleName
internalRolename"Object*∑:3

SimpleName
internalRolename"next*æ:4§
Block
internalRolebodyú
AssertStatement
internalRole
statementsi
MethodInvocation
internalRole
expression6

SimpleName
internalRolename"hasNext*⁄ :i:g:f±
VariableDeclarationStatement
internalRole
statementsX

SimpleType
internalRoletype4

SimpleName
internalRolename"Object*Ä":ö
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*á":©
MethodInvocation
internalRoleinitializer=

SimpleName
internalRole
expression"nextNode*ê":h6

SimpleName
internalRolename"getData*ô":i:gÎ
ExpressionStatement
internalRole
statements¥

Assignment
operator=
internalRole
expression@

SimpleName
internalRoleleftHandSide"nextNode*±#:É≠
MethodInvocation
internalRolerightHandSide=

SimpleName
internalRole
expression"nextNode*º#:h6

SimpleName
internalRolename"getNext*≈#:i:gÑ*±#:Ç:é
ExpressionStatement
internalRole
statements◊

Assignment
internalRole
expression
operator=@

SimpleName
internalRoleleftHandSide"removeOK*Î%:ÉQ
BooleanLiteral
booleanValuetrue
internalRolerightHandSide*ˆ%:oÑ*Î%:Ç:æ
ExpressionStatement
internalRole
statementsá
PostfixExpression
internalRole
expression
operator++<

SimpleName
internalRoleoperand"posToRemove*â&:*â&::m
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*∫(::`:3_^*∞:E2Ω	
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*‡+9
PrimitiveType
internalRolereturnType2"void*Á+5

SimpleName
internalRolename"remove*Ï+:4º
Block
internalRolebodyo
AssertStatement
internalRole
statements<

SimpleName
internalRole
expression"removeOK*ä,::fè
ExpressionStatement
internalRole
statementsÿ

Assignment
internalRole
expression
operator=@

SimpleName
internalRoleleftHandSide"removeOK*°-:ÉR
BooleanLiteral
internalRolerightHandSide
booleanValuefalse*¨-:oÑ*°-:Ç:”
ExpressionStatement
internalRole
statementsú
MethodInvocation
internalRole
expressionq
ThisExpression
internalRole
expression=

SimpleName
internalRole	qualifier"
LinkedList*¿.::hâ5

SimpleName
internalRolename"remove*–.:i?

SimpleName
internalRole	arguments"posToRemove*◊.:j:g:æ
ExpressionStatement
internalRole
statementsá
PostfixExpression
internalRole
expression
operator--<

SimpleName
internalRoleoperand"posToRemove*Ú/:*Ú/:::3_^*‡+:E2*ú:?:£
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*û	39
PrimitiveType
internalRolereturnType2"void*•	38

SimpleName
internalRolename"	makeEmpty*™	3:4ü
Block
internalRolebody¯
ExpressionStatement
internalRole
statements¡

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"head*Â	5:Éæ

Assignment
internalRolerightHandSide
operator=<

SimpleName
internalRoleleftHandSide"tail*Ï	5:É7
NullLiteral
internalRolerightHandSide"null:uÑ*Ï	5:ÑÇ*Â	5:Ç:ˇ
ExpressionStatement
internalRole
statements»

Assignment
operator=
internalRole
expression<

SimpleName
internalRoleleftHandSide"size*Ç
6:ÉF
NumberLiteral
internalRolerightHandSide

token0*â
6:vÑ*Ç
6:Ç::3_^*û	3:E2Ò/
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*û
9_

SimpleType
internalRolereturnType24

SimpleName
internalRolename"Object*•
9:5

SimpleName
internalRolename"remove*¨
9:4∫
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*≥
92

SimpleName
internalRolename"pos*∑
9:7*≥
9:6ç,
Block
internalRolebodyê
AssertStatement
internalRole
statements‹
InfixExpression
operator&&
internalRole
expressionÀ
InfixExpression
internalRoleleftOperand
operator>=9

SimpleName
internalRoleleftOperand"pos*Õ
::D
NumberLiteral
internalRolerightOperand

token0*‘
::v*Õ
::¬
InfixExpression
internalRolerightOperand
operator<9

SimpleName
internalRoleleftOperand"pos*Ÿ
::;

SimpleName
internalRolerightOperand"size*ﬂ
::*Ÿ
::*Õ
::%:fÑ
VariableDeclarationStatement
internalRole
statementsX

SimpleType
internalRoletype4

SimpleName
internalRolename"Object*Ó
;:n
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*ı
;:•#
IfStatement
internalRole
statements 
InfixExpression
internalRole
expression
operator==9

SimpleName
internalRoleleftOperand"pos*ä<:D
NumberLiteral
internalRolerightOperand

token0*ë<:v*ä<:GÚ	
Block
internalRolethenStatementÂ
ExpressionStatement
internalRole
statementsÆ

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*£=:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"head*¨=:h6

SimpleName
internalRolename"getData*±=:i:gÑ*£=:Ç:„
ExpressionStatement
internalRole
statements¨

Assignment
operator=
internalRole
expression<

SimpleName
internalRoleleftHandSide"head*…>:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"head*–>:h6

SimpleName
internalRolename"getNext*’>:i:gÑ*…>:Ç:ˆ
IfStatement
internalRole
statementsÀ
InfixExpression
internalRole
expression
operator==:

SimpleName
internalRoleleftOperand"size*Ò?:D
NumberLiteral
internalRolerightOperand

token1*˘?:v*Ò?:GÙ
ExpressionStatement
internalRolethenStatementπ

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"tail*é@:É7
NullLiteral
internalRolerightHandSide"null:uÑ*é@:Ç:H"if:F:H_^Ø
Block
internalRoleelseStatementº
VariableDeclarationStatement
internalRole
statementsV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*∆C:ß
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"temp*ÀC:9

SimpleName
internalRoleinitializer"head*“C:Û
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*ÈD≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ÌD:B
NumberLiteral
internalRoleinitializer

token1*ÒD:v:PΩ
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*ÙD::

SimpleName
internalRolerightOperand"pos*¯D:*ÙD:Q|
PostfixExpression
operator++
internalRoleupdaters2

SimpleName
internalRoleoperand"i*˝D:*˝D:Rﬁ
ExpressionStatement
internalRolebody¨

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"temp*ìE:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"temp*öE:h6

SimpleName
internalRolename"getNext*üE:i:gÑ*ìE:Ç:S:O“
ExpressionStatement
internalRole
statementsõ

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*∑F:Éñ
MethodInvocation
internalRolerightHandSide•
MethodInvocation
internalRole
expression9

SimpleName
internalRole
expression"temp*¿F:h6

SimpleName
internalRolename"getNext*≈F:i:hg6

SimpleName
internalRolename"getData*œF:i:gÑ*∑F:Ç:Ô
ExpressionStatement
internalRole
statements∏
MethodInvocation
internalRole
expression9

SimpleName
internalRole
expression"temp*ÁG:h6

SimpleName
internalRolename"setNext*ÏG:ië
MethodInvocation
internalRole	arguments•
MethodInvocation
internalRole
expression9

SimpleName
internalRole
expression"temp*ıG:h6

SimpleName
internalRolename"getNext*˙G:i:hg6

SimpleName
internalRolename"getNext*ÑG:i:jg:g:Ö
IfStatement
internalRole
statements‘
InfixExpression
internalRole
expression
operator==9

SimpleName
internalRoleleftOperand"pos*¢H:Õ
InfixExpression
internalRolerightOperand
operator-:

SimpleName
internalRoleleftOperand"size*©H:D
NumberLiteral
internalRolerightOperand

token1*∞H:v*©H:**¢H:G˙
ExpressionStatement
internalRolethenStatementø

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"tail*ƒI:É=

SimpleName
internalRolerightHandSide"temp*ÀI:Ñ*ƒI:Ç:H"if:F:I_^"if:F∑
ExpressionStatement
internalRole
statementsÄ
PostfixExpression
operator--
internalRole
expression5

SimpleName
internalRoleoperand"size*ÂK:*ÂK::m
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*˝L::`:3_^*û
9:E2Œ
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*óO_

SimpleType
internalRolereturnType24

SimpleName
internalRolename"Object*ûO:2

SimpleName
internalRolename"get*•O:4∫
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*©O2

SimpleName
internalRolename"pos*≠O:7*©O:6Ì
Block
internalRolebodyê
AssertStatement
internalRole
statements‹
InfixExpression
internalRole
expression
operator&&À
InfixExpression
internalRoleleftOperand
operator>=9

SimpleName
internalRoleleftOperand"pos*√P:D
NumberLiteral
internalRolerightOperand

token0* P:v*√P:¬
InfixExpression
operator<
internalRolerightOperand9

SimpleName
internalRoleleftOperand"pos*œP:;

SimpleName
internalRolerightOperand"size*’P:*œP:*√P:%:fÑ
VariableDeclarationStatement
internalRole
statementsX

SimpleType
internalRoletype4

SimpleName
internalRolename"Object*üS:n
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*¶S:ø
IfStatement
internalRole
statements‘
InfixExpression
operator==
internalRole
expression9

SimpleName
internalRoleleftOperand"pos*ªT:Õ
InfixExpression
operator-
internalRolerightOperand:

SimpleName
internalRoleleftOperand"size*¬T:D
NumberLiteral
internalRolerightOperand

token1*…T:v*¬T:**ªT:GÈ
ExpressionStatement
internalRolethenStatementÆ

Assignment
operator=
internalRole
expression>

SimpleName
internalRoleleftHandSide"result*⁄U:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"tail*„U:h6

SimpleName
internalRolename"getData*ËU:i:gÑ*⁄U:Ç:H»
Block
internalRoleelseStatementº
VariableDeclarationStatement
internalRole
statementsV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*ñW:ß
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"temp*õW:9

SimpleName
internalRoleinitializer"head*¢W:Û
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*πX≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ΩX:B
NumberLiteral
internalRoleinitializer

token0*¡X:v:PΩ
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*ƒX::

SimpleName
internalRolerightOperand"pos*»X:*ƒX:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*ÕX:*ÕX:Rﬁ
ExpressionStatement
internalRolebody¨

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"temp*„Y:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"temp*ÍY:h6

SimpleName
internalRolename"getNext*ÔY:i:gÑ*„Y:Ç:S:OÂ
ExpressionStatement
internalRole
statementsÆ

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*áZ:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"temp*êZ:h6

SimpleName
internalRolename"getData*ïZ:i:gÑ*áZ:Ç::I_^"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*„]::`:3_^*óO:E2æ$
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*˝`9
PrimitiveType
internalRolereturnType2"void*Ñ`5

SimpleName
internalRolename"insert*â`:4∫
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*ê`2

SimpleName
internalRolename"pos*î`:7*ê`:6·
SingleVariableDeclaration
varargsfalse
internalRole
parametersX

SimpleType
internalRoletype4

SimpleName
internalRolename"Object*ô`:2

SimpleName
internalRolename"obj*†`:7*ô`:6ú
Block
internalRolebodyë
AssertStatement
internalRole
statements›
InfixExpression
internalRole
expression
operator&&À
InfixExpression
internalRoleleftOperand
operator>=9

SimpleName
internalRoleleftOperand"pos*∂a:D
NumberLiteral
internalRolerightOperand

token0*Ωa:v*∂a:√
InfixExpression
internalRolerightOperand
operator<=9

SimpleName
internalRoleleftOperand"pos*¬a:;

SimpleName
internalRolerightOperand"size*…a:*¬a:*∂a:%:f„
IfStatement
internalRole
statements 
InfixExpression
internalRole
expression
operator==9

SimpleName
internalRoleleftOperand"pos*˚d:D
NumberLiteral
internalRolerightOperand

token0*Çd:v*˚d:Gﬁ
ExpressionStatement
internalRolethenStatement£
MethodInvocation
internalRole
expression7

SimpleName
internalRolename"addFirst*íe:i7

SimpleName
internalRole	arguments"obj*õe:j:g:HÅ
IfStatement
internalRoleelseStatement¡
InfixExpression
operator==
internalRole
expression9

SimpleName
internalRoleleftOperand"pos*—g:;

SimpleName
internalRolerightOperand"size*ÿg:*—g:GŸ
ExpressionStatement
internalRolethenStatementû
MethodInvocation
internalRole
expression2

SimpleName
internalRolename"add*Ïh:i7

SimpleName
internalRole	arguments"obj*h:j:g:H©
Block
internalRoleelseStatementº
VariableDeclarationStatement
internalRole
statementsV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*Ωk:ß
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"temp*¬k:9

SimpleName
internalRoleinitializer"head*…k:Û
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*‡l≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*‰l:B
NumberLiteral
internalRoleinitializer

token1*Ël:v:PΩ
InfixExpression
operator<
internalRole
expression7

SimpleName
internalRoleleftOperand"i*Îl::

SimpleName
internalRolerightOperand"pos*Ôl:*Îl:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*Ùl:*Ùl:Rﬁ
ExpressionStatement
internalRolebody¨

Assignment
operator=
internalRole
expression<

SimpleName
internalRoleleftHandSide"temp*äm:É©
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"temp*ëm:h6

SimpleName
internalRolename"getNext*ñm:i:gÑ*äm:Ç:S:OÒ
VariableDeclarationStatement
internalRole
statementsV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*Üp:‹
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"newNode*ãp:Í
ClassInstanceCreation
internalRoleinitializerV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*ôp:6

SimpleName
internalRole	arguments"obj*ûp:£
MethodInvocation
internalRole	arguments9

SimpleName
internalRole
expression"temp*£p:h6

SimpleName
internalRolename"getNext*®p:i:gò
ExpressionStatement
internalRole
statements·
MethodInvocation
internalRole
expression9

SimpleName
internalRole
expression"temp*¡q:h6

SimpleName
internalRolename"setNext*∆q:i;

SimpleName
internalRole	arguments"newNode*œq:j:g:∑
ExpressionStatement
internalRole
statementsÄ
PostfixExpression
operator++
internalRole
expression5

SimpleName
internalRoleoperand"size*Ár:*Ár:::I_^"if:IF"if:F:3_^*˝`:E2‹
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*åv9
PrimitiveType
internalRolereturnType2"void*ìv2

SimpleName
internalRolename"add*òv:4·
SingleVariableDeclaration
internalRole
parameters
varargsfalseX

SimpleType
internalRoletype4

SimpleName
internalRolename"Object*úv:2

SimpleName
internalRolename"obj*£v:7*úv:6˙
Block
internalRolebody˛
VariableDeclarationStatement
internalRole
statementsV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*≤w:È
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"newNode*∑w:˜
ClassInstanceCreation
internalRoleinitializerV

SimpleType
internalRoletype2

SimpleName
internalRolename"Node*≈w:6

SimpleName
internalRole	arguments"obj* w:1
NullLiteral
internalRole	arguments"null:uû
IfStatement
internalRole
statementsÀ
InfixExpression
internalRole
expression
operator==:

SimpleName
internalRoleleftOperand"size*„x:D
NumberLiteral

token0
internalRolerightOperand*Îx:v*„x:G˝
ExpressionStatement
internalRolethenStatement¬

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"head*¸y:É@

SimpleName
internalRolerightHandSide"newNode*Éy:Ñ*¸y:Ç:Hú
ExpressionStatement
internalRoleelseStatement·
MethodInvocation
internalRole
expression9

SimpleName
internalRole
expression"tail*ß{:h6

SimpleName
internalRolename"setNext*¨{:i;

SimpleName
internalRole	arguments"newNode*¥{:j:g:I"if:F˘
ExpressionStatement
internalRole
statements¬

Assignment
internalRole
expression
operator=<

SimpleName
internalRoleleftHandSide"tail*«|:É@

SimpleName
internalRolerightHandSide"newNode*Œ|:Ñ*«|:Ç:∑
ExpressionStatement
internalRole
statementsÄ
PostfixExpression
operator++
internalRole
expression5

SimpleName
internalRoleoperand"size*‡}:*‡}:::3_^*åv:E2Ë
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"public*˙Ä:
PrimitiveType
internalRolereturnType2"void*ÅÄ8

SimpleName
internalRolename"addFirst*ÜÄ:4‰
SingleVariableDeclaration
internalRole
parameters
varargsfalseY

SimpleType
internalRoletype5

SimpleName
internalRolename"Object*èÄ:3

SimpleName
internalRolename"obj*ñÄ:7*èÄ:6˙
Block
internalRolebody’
IfStatement
internalRole
statementsŒ
InfixExpression
internalRole
expression
operator==;

SimpleName
internalRoleleftOperand"size*®Å:E
NumberLiteral
internalRolerightOperand

token0*∞Å:v*®Å:G€
ExpressionStatement
internalRolethenStatement†
MethodInvocation
internalRole
expression3

SimpleName
internalRolename"add*¿Ç:i8

SimpleName
internalRole	arguments"obj*ƒÇ:j:g:HÚ
Block
internalRoleelseStatementâ
VariableDeclarationStatement
internalRole
statementsW

SimpleType
internalRoletype3

SimpleName
internalRolename"Node*ÊÑ:Û
VariableDeclarationFragment
internalRole	fragments6

SimpleName
internalRolename"newNode*ÎÑ:Ä
ClassInstanceCreation
internalRoleinitializerW

SimpleType
internalRoletype3

SimpleName
internalRolename"Node*˘Ñ:7

SimpleName
internalRole	arguments"obj*˛Ñ:8

SimpleName
internalRole	arguments"head*ÉÑ:¸
ExpressionStatement
internalRole
statements≈

Assignment
internalRole
expression
operator==

SimpleName
internalRoleleftHandSide"head*óÖ:ÉA

SimpleName
internalRolerightHandSide"newNode*ûÖ:Ñ*óÖ:Ç:π
ExpressionStatement
internalRole
statementsÇ
PostfixExpression
internalRole
expression
operator++6

SimpleName
internalRoleoperand"size*¥Ü:*¥Ü:::I_^"if:F:3_^*˙Ä:E2ı
MethodDeclaration 
internalRolebodyDeclarations
constructorfalse5
Modifier
internalRole	modifiers"public*Ÿä`

SimpleType
internalRolereturnType25

SimpleName
internalRolename"String*‡ä:8

SimpleName
internalRolename"toString*Áä:4»
Block
internalRolebodyƒ
VariableDeclarationStatement
internalRole
statementsY

SimpleType
internalRoletype5

SimpleName
internalRolename"String*¸ã:¨
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"result*Éã:;
StringLiteral
internalRoleinitializer"""*åã:yø
VariableDeclarationStatement
internalRole
statementsW

SimpleType
internalRoletype3

SimpleName
internalRolename"Node*ôå:©
VariableDeclarationFragment
internalRole	fragments3

SimpleName
internalRolename"temp*ûå::

SimpleName
internalRoleinitializer"head*•å:™
ForStatement
internalRole
statements¶
VariableDeclarationExpression
internalRoleinitializers2
PrimitiveType
internalRoletype"int*∏çØ
VariableDeclarationFragment
internalRole	fragments0

SimpleName
internalRolename"i*ºç:C
NumberLiteral
internalRoleinitializer

token0*¿ç:v:P¡
InfixExpression
internalRole
expression
operator<8

SimpleName
internalRoleleftOperand"i*√ç:<

SimpleName
internalRolerightOperand"size*«ç:*√ç:Q~
PostfixExpression
internalRoleupdaters
operator++3

SimpleName
internalRoleoperand"i*Õç:*Õç:Rå
Block
internalRolebody˝
ExpressionStatement
internalRole
statements∆

Assignment
internalRole
expression
operator+=?

SimpleName
internalRoleleftHandSide"result*‡é:Éπ
InfixExpression
internalRolerightHandSide
operator+®
MethodInvocation
internalRoleleftOperand:

SimpleName
internalRole
expression"temp*Íé:h7

SimpleName
internalRolename"getData*Ôé:i:g>
StringLiteral
internalRolerightOperand"" "*˚é:y*Íé:)Ñ*‡é:ÇÜÖ):Á
ExpressionStatement
internalRole
statements∞

Assignment
internalRole
expression
operator==

SimpleName
internalRoleleftHandSide"temp*çè:É´
MethodInvocation
internalRolerightHandSide:

SimpleName
internalRole
expression"temp*îè:h7

SimpleName
internalRolename"getNext*ôè:i:gÑ*çè:Ç::S_^:On
ReturnStatement
internalRole
statements;

SimpleName
internalRole
expression"result*øë::`:3_^*Ÿä:E2*L:E::$