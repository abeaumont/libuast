
CompilationUnit◊
ImportDeclaration
internalRoleimports
onDemandfalse
staticfalse˝
QualifiedName
internalRolenameò
QualifiedName
internalRole	qualifier6

SimpleName
internalRole	qualifier"java*:1

SimpleName
internalRolename"math*::7

SimpleName
internalRolename"
BigInteger*::0*:/’
ImportDeclaration
onDemandfalse
staticfalse
internalRoleimports˘
QualifiedName
internalRolenameò
QualifiedName
internalRole	qualifier6

SimpleName
internalRole	qualifier"java*%:1

SimpleName
internalRolename"util**::3

SimpleName
internalRolename"Random*/::0*:/•ﬁ
TypeDeclaration
	interfacefalse
internalRoletypes3
Modifier
internalRole	modifiers"public*:4

SimpleName
internalRolename"PrimeEx*G:ﬁP
MethodDeclaration
constructorfalse 
internalRolebodyDeclarationsù
Javadoc
internalRolejavadocs

TagElement
tagName@param
internalRoletags6

SimpleName
internalRole	fragments"args*e:*^:ãä3
Modifier
internalRole	modifiers"public*r	3
Modifier
internalRole	modifiers"static*y	9
PrimitiveType
internalRolereturnType2"void*Ä	3

SimpleName
internalRolename"main*Ö	:4∂
SingleVariableDeclaration
internalRole
parameters
varargsfalse´
	ArrayType
internalRoletype_

SimpleType
internalRoleelementType4

SimpleName
internalRolename"String*ä	:'
	Dimension
internalRole
dimensions3

SimpleName
internalRolename"args*ì	:7*ä	:6”J
Block
internalRolebody©
ExpressionStatement
internalRole
statementsÚ
MethodInvocation
internalRole
expression8

SimpleName
internalRolename"	printTest*û
:iB
NumberLiteral
internalRole	arguments
token10*®
:vjA
NumberLiteral
internalRole	arguments

token4*¨
:vj:g:®
ExpressionStatement
internalRole
statementsÒ
MethodInvocation
internalRole
expression8

SimpleName
internalRolename"	printTest*≥:iA
NumberLiteral
internalRole	arguments

token2*Ω:vjA
NumberLiteral
internalRole	arguments

token2*¿:vj:g:Ø
ExpressionStatement
internalRole
statements¯
MethodInvocation
internalRole
expression8

SimpleName
internalRolename"	printTest*«:iH
NumberLiteral
token54161329
internalRole	arguments*—:vjA
NumberLiteral
internalRole	arguments

token4*€:vj:g:±
ExpressionStatement
internalRole
statements˙
MethodInvocation
internalRole
expression8

SimpleName
internalRolename"	printTest*‚:iJ
NumberLiteral
internalRole	arguments
token
1882341361*Ï:vjA
NumberLiteral

token2
internalRole	arguments*¯:vj:g:©
ExpressionStatement
internalRole
statementsÚ
MethodInvocation
internalRole
expression8

SimpleName
internalRolename"	printTest*ˇ:iB
NumberLiteral
internalRole	arguments
token36*â:vjA
NumberLiteral

token9
internalRole	arguments*ç:vj:g:é
ExpressionStatement
internalRole
statements◊
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*ñ:1

SimpleName
internalRolename"out*ù::h6

SimpleName
internalRolename"println*°:iÀ
InfixExpression
internalRole	arguments
operator+µ
MethodInvocation
internalRoleleftOperand6

SimpleName
internalRolename"isPrime*©:iH
NumberLiteral
internalRole	arguments
token54161329*±:vj:gI
StringLiteral
internalRolerightOperand"" expect false"*Ω:y*©:j):g:è
ExpressionStatement
internalRole
statementsÿ
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*“:1

SimpleName
internalRolename"out*Ÿ::h6

SimpleName
internalRolename"println*›:iÃ
InfixExpression
internalRole	arguments
operator+∑
MethodInvocation
internalRoleleftOperand6

SimpleName
internalRolename"isPrime*Â:iJ
NumberLiteral
internalRole	arguments
token
1882341361*Ì:vj:gH
StringLiteral
internalRolerightOperand"" expect true"*˚:y*Â:j):g:Ü
ExpressionStatement
internalRole
statementsœ
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*è:1

SimpleName
internalRolename"out*ñ::h6

SimpleName
internalRolename"println*ö:i√
InfixExpression
internalRole	arguments
operator+Æ
MethodInvocation
internalRoleleftOperand6

SimpleName
internalRolename"isPrime*¢:iA
NumberLiteral
internalRole	arguments

token2*™:vj:gH
StringLiteral
internalRolerightOperand"" expect true"*Ø:y*¢:j):g:•
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*√µ
VariableDeclarationFragment
internalRole	fragments7

SimpleName
internalRolename"	numPrimes*«:B
NumberLiteral
internalRoleinitializer

token0*”:vó
VariableDeclarationStatement
internalRole
statements[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Stopwatch*Ÿ:˝
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"s*„:ë
ClassInstanceCreation
internalRoleinitializer[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Stopwatch*Î:÷
ExpressionStatement
internalRole
statementsü
MethodInvocation
internalRole
expression6

SimpleName
internalRole
expression"s*˚:h4

SimpleName
internalRolename"start*˝:i:g:ç	
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*ç≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ë:B
NumberLiteral
internalRoleinitializer

token2*ï:v:PŒ
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*ò:K
NumberLiteral
token10000000
internalRolerightOperand*ú:v*ò:Q|
PostfixExpression
operator++
internalRoleupdaters2

SimpleName
internalRoleoperand"i*¶:*¶:RÁ
Block
internalRolebody¬
IfStatement
internalRole
statements°
MethodInvocation
internalRole
expression6

SimpleName
internalRolename"isPrime*¥:i5

SimpleName
internalRole	arguments"i*º:j:gGÍ
Block
internalRolethenStatementº
ExpressionStatement
internalRole
statementsÖ
PostfixExpression
internalRole
expression
operator++:

SimpleName
internalRoleoperand"	numPrimes*«:*«:::H_^"if:F:S_^:O’
ExpressionStatement
internalRole
statementsû
MethodInvocation
internalRole
expression6

SimpleName
internalRole
expression"s*‚:h3

SimpleName
internalRolename"stop*‰:i:g:»
ExpressionStatement
internalRole
statementsë
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*Ô:1

SimpleName
internalRolename"out*ˆ::h6

SimpleName
internalRolename"println*˙:iÖ
InfixExpression
operator+
internalRole	arguments?

SimpleName
internalRoleleftOperand"	numPrimes*Ç:=
StringLiteral
internalRolerightOperand"" "*é:y;

SimpleName 
internalRoleextendedOperands"s*î:*Ç:j):g:÷
ExpressionStatement
internalRole
statementsü
MethodInvocation
internalRole
expression6

SimpleName
internalRole
expression"s*õ:h4

SimpleName
internalRolename"start*ù:i:g:Ô
VariableDeclarationStatement
internalRole
statementsà
	ArrayType
internalRoletype<
PrimitiveType
internalRoleelementType"boolean*©'
	Dimension
internalRole
dimensionsß
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"primes*≥:∂
MethodInvocation
internalRoleinitializer8

SimpleName
internalRolename"	getPrimes*º:iH
NumberLiteral
internalRole	arguments
token10000000*∆:vj:gû
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*‘Æ
VariableDeclarationFragment
internalRole	fragments0

SimpleName
internalRolename"np*ÿ:B
NumberLiteral
internalRoleinitializer

token0*›:v”
EnhancedForStatement
internalRole
statementsª
SingleVariableDeclaration
internalRole	parameter
varargsfalse5
PrimitiveType
internalRoletype"boolean*Á /

SimpleName
internalRolename"b*Ô :*Á :PR;

SimpleName
internalRole
expression"primes*Û :Qü
IfStatement
internalRolebody6

SimpleName
internalRole
expression"b*Ç!:G∏
ExpressionStatement
internalRolethenStatement~
PostfixExpression
internalRole
expression
operator++3

SimpleName
internalRoleoperand"np*ä":*ä"::H"if:FS:T’
ExpressionStatement
internalRole
statementsû
MethodInvocation
internalRole
expression6

SimpleName
internalRole
expression"s*ì#:h3

SimpleName
internalRolename"stop*ï#:i:g:¡
ExpressionStatement
internalRole
statementsä
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*†$:1

SimpleName
internalRolename"out*ß$::h6

SimpleName
internalRolename"println*´$:i˛
InfixExpression
internalRole	arguments
operator+8

SimpleName
internalRoleleftOperand"np*≥$:=
StringLiteral
internalRolerightOperand"" "*∏$:y;

SimpleName 
internalRoleextendedOperands"s*æ$:*≥$:j):g:Ì
ExpressionStatement
internalRole
statements∂
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*«&:1

SimpleName
internalRolename"out*Œ&::h6

SimpleName
internalRolename"println*“&:i™
ClassInstanceCreation
internalRole	arguments\

SimpleType
internalRoletype8

SimpleName
internalRolename"
BigInteger*ﬁ&:C
NumberLiteral
internalRole	arguments
token1024*È&:vA
NumberLiteral
token10
internalRole	arguments*Ô&:vå
ClassInstanceCreation
internalRole	argumentsX

SimpleType
internalRoletype4

SimpleName
internalRolename"Random*˜&::j:g::3_^*U:E2 *
MethodDeclaration 
internalRolebodyDeclarations
constructorfalse4
Modifier
internalRole	modifiers"public*ã)4
Modifier
internalRole	modifiers"static*í)è
	ArrayType
internalRolereturnType2<
PrimitiveType
internalRoleelementType"boolean*ô)'
	Dimension
internalRole
dimensions8

SimpleName
internalRolename"	getPrimes*£):4∫
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*≠)2

SimpleName
internalRolename"max*±):7*≠):6¸%
Block
internalRolebodyº
VariableDeclarationStatement
internalRole
statementsà
	ArrayType
internalRoletype<
PrimitiveType
internalRoleelementType"boolean*ª*'
	Dimension
internalRole
dimensionsÙ
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*≈*:É
ArrayCreation
internalRoleinitializerà
	ArrayType
internalRoletype<
PrimitiveType
internalRoleelementType"boolean*“*'
	Dimension
internalRole
dimensions…
InfixExpression
internalRole
dimensions
operator+9

SimpleName
internalRoleleftOperand"max*⁄*:D
NumberLiteral
internalRolerightOperand

token1*‡*:v*⁄*:)‡
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*Î+≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*Ô+:B
NumberLiteral
internalRoleinitializer

token2*Û+:v:P¶
InfixExpression
operator<
internalRole
expression7

SimpleName
internalRoleleftOperand"i*ˆ+:¢
QualifiedName
internalRolerightOperand9

SimpleName
internalRole	qualifier"result*˙+:4

SimpleName
internalRolename"length*Å+::*ˆ+:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*â+:*â+:R‚
ExpressionStatement
internalRolebody∞

Assignment
internalRole
expression
operator=ò
ArrayAccess
internalRoleleftHandSide5

SimpleName
internalRolearray"result*í,:0

SimpleName
internalRoleindex"i*ô,::ÉQ
BooleanLiteral
booleanValuetrue
internalRolerightHandSide*û,:oÑ*í,:Ç:S:OÛ
VariableDeclarationStatement
internalRole
statements3
Modifier
internalRole	modifiers"final*ß-4
PrimitiveType
internalRoletype"double*≠-À
VariableDeclarationFragment
internalRole	fragments3

SimpleName
internalRolename"LIMIT*¥-:€
MethodInvocation
internalRoleinitializer9

SimpleName
internalRole
expression"Math*º-:h3

SimpleName
internalRolename"sqrt*¡-:i7

SimpleName
internalRole	arguments"max*∆-:j:g–
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*”.≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*◊.:B
NumberLiteral
internalRoleinitializer

token2*€.:v:P¿
InfixExpression
internalRole
expression
operator<=7

SimpleName
internalRoleleftOperand"i*ﬁ.:<

SimpleName
internalRolerightOperand"LIMIT*„.:*ﬁ.:Q|
PostfixExpression
operator++
internalRoleupdaters2

SimpleName
internalRoleoperand"i*Í.:*Í.:R∏
Block
internalRolebodyì
IfStatement
internalRole
statementsï
ArrayAccess
internalRole
expression5

SimpleName
internalRolearray"result*¯/:0

SimpleName
internalRoleindex"i*ˇ/::G«
Block
internalRolethenStatement®
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*´	1∏
VariableDeclarationFragment
internalRole	fragments3

SimpleName
internalRolename"index*Ø	1:»
InfixExpression
internalRoleinitializer
operator*C
NumberLiteral
internalRoleleftOperand

token2*∑	1:v8

SimpleName
internalRolerightOperand"i*ª	1:*∑	1:+Ó
WhileStatement
internalRole
statements™
InfixExpression
internalRole
expression
operator<;

SimpleName
internalRoleleftOperand"index*…	2:¢
QualifiedName
internalRolerightOperand9

SimpleName
internalRole	qualifier"result*—	2:4

SimpleName
internalRolename"length*ÿ	2::*…	2:Vé
Block
internalRolebodyÏ
ExpressionStatement
internalRole
statementsµ

Assignment
internalRole
expression
operator=ú
ArrayAccess
internalRoleleftHandSide5

SimpleName
internalRolearray"result*Á	3:4

SimpleName
internalRoleindex"index*Ó	3::ÉR
BooleanLiteral
booleanValuefalse
internalRolerightHandSide*˜	3:oÑ*Á	3:Ç:˙
ExpressionStatement
internalRole
statements√

Assignment
operator+=
internalRole
expression=

SimpleName
internalRoleleftHandSide"index*Ö
4:É:

SimpleName
internalRolerightHandSide"i*é
4:Ñ*Ö
4:ÇÜÖ)::W_^:U:H_^"if:F:S_^:Om
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*≠
8::`:3_^*ã):E2∫"
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ø
<4
Modifier
internalRole	modifiers"static*∆
<9
PrimitiveType
internalRolereturnType2"void*Õ
<8

SimpleName
internalRolename"	printTest*“
<:4∫
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*‹
<2

SimpleName
internalRolename"num*‡
<:7*‹
<:6∆
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*Â
<>

SimpleName
internalRolename"expectedFactors*È
<:7*Â
<:6˙
Block
internalRolebodyò
VariableDeclarationStatement
internalRole
statements[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Stopwatch*ˇ
=:˛
VariableDeclarationFragment
internalRole	fragments0

SimpleName
internalRolename"st*â=:ë
ClassInstanceCreation
internalRoleinitializer[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Stopwatch*í=:◊
ExpressionStatement
internalRole
statements†
MethodInvocation
internalRole
expression7

SimpleName
internalRole
expression"st*¢>:h4

SimpleName
internalRolename"start*•>:i:g:é
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*±?û
VariableDeclarationFragment
internalRole	fragments;

SimpleName
internalRolename"actualFactors*µ?:¶
MethodInvocation
internalRoleinitializer9

SimpleName
internalRolename"
numFactors*≈?:i7

SimpleName
internalRole	arguments"num*–?:j:g÷
ExpressionStatement
internalRole
statementsü
MethodInvocation
internalRole
expression7

SimpleName
internalRole
expression"st*Ÿ@:h3

SimpleName
internalRolename"stop*‹@:i:g:Ù
ExpressionStatement
internalRole
statementsΩ
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*ÁA:1

SimpleName
internalRolename"out*ÓA::h6

SimpleName
internalRolename"println*ÚA:i±
InfixExpression
internalRole	arguments
operator+C
StringLiteral
internalRoleleftOperand"
"Testing "*˙A:y:

SimpleName
internalRolerightOperand"num*áA:G
StringLiteral 
internalRoleextendedOperands"
" expect "*çA:yI

SimpleName 
internalRoleextendedOperands"expectedFactors*öA:A
StringLiteral 
internalRoleextendedOperands"", "*¨A:yF
StringLiteral 
internalRoleextendedOperands"	"actual "*∏B:yG

SimpleName 
internalRoleextendedOperands"actualFactors*ƒB:*˙A:j):g:ö
IfStatement
internalRole
statements÷
InfixExpression
internalRole
expression
operator==C

SimpleName
internalRoleleftOperand"actualFactors*⁄C:F

SimpleName
internalRolerightOperand"expectedFactors*ÎC:*⁄C:GÖ
ExpressionStatement
internalRolethenStatement 
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*ÄD:1

SimpleName
internalRolename"out*áD::h6

SimpleName
internalRolename"println*ãD:i?
StringLiteral
internalRole	arguments""PASSED"*ìD:yj:g:HÖ
ExpressionStatement
internalRoleelseStatement 
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*™F:1

SimpleName
internalRolename"out*±F::h6

SimpleName
internalRolename"println*µF:i?
StringLiteral
internalRole	arguments""FAILED"*ΩF:yj:g:I"if:F‚
ExpressionStatement
internalRole
statements´
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*ÀG:1

SimpleName
internalRolename"out*“G::h6

SimpleName
internalRolename"println*÷G:iü
MethodInvocation
internalRole	arguments7

SimpleName
internalRole
expression"st*ﬁG:h3

SimpleName
internalRolename"time*·G:i:jg:g::3_^*ø
<:E2Æ 
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ÖK4
Modifier
internalRole	modifiers"static*åK<
PrimitiveType
internalRolereturnType2"boolean*ìK6

SimpleName
internalRolename"isPrime*õK:4∫
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*£K2

SimpleName
internalRolename"num*ßK:7*£K:6∂
Block
internalRolebodyÍ
AssertStatement
internalRole
statements…
InfixExpression
operator>=
internalRole
expression9

SimpleName
internalRoleleftOperand"num*∏L:D
NumberLiteral
internalRolerightOperand

token2*øL:v*∏L:Í
InfixExpression
internalRolemessage
operator+g
StringLiteral
internalRoleleftOperand"."failed precondition. num must be >= 2. num: "*√L:y:

SimpleName
internalRolerightOperand"num*ÙL:*√L:):fÛ
VariableDeclarationStatement
internalRole
statements3
Modifier
internalRole	modifiers"final*¸M4
PrimitiveType
internalRoletype"double*ÇMÀ
VariableDeclarationFragment
internalRole	fragments3

SimpleName
internalRolename"LIMIT*âM:€
MethodInvocation
internalRoleinitializer9

SimpleName
internalRole
expression"Math*ëM:h3

SimpleName
internalRolename"sqrt*ñM:i7

SimpleName
internalRole	arguments"num*õM:j:g”
VariableDeclarationStatement
internalRole
statements5
PrimitiveType
internalRoletype"boolean*§Nﬂ
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"isPrime*¨N:Ì
ConditionalExpression
internalRoleinitializerÅ
ParenthesizedExpression
internalRole
expression…
InfixExpression
internalRole
expression
operator==9

SimpleName
internalRoleleftOperand"num*∑N:D
NumberLiteral
internalRolerightOperand

token2*æN:v*∑N:P
BooleanLiteral
booleanValuetrue
internalRolethenExpression*√N:o‡
InfixExpression
internalRoleelseExpression
operator!=À
InfixExpression
internalRoleleftOperand
operator%9

SimpleName
internalRoleleftOperand"num* N:D
NumberLiteral
internalRolerightOperand

token2*–N:v* N:-D
NumberLiteral
internalRolerightOperand

token0*’N:v* N:ü
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*€OØ
VariableDeclarationFragment
internalRole	fragments1

SimpleName
internalRolename"div*ﬂO:B
NumberLiteral
internalRoleinitializer

token3*ÂO:v∆	
WhileStatement
internalRole
statements–
InfixExpression
internalRole
expression
operator&&√
InfixExpression
internalRoleleftOperand
operator<=9

SimpleName
internalRoleleftOperand"div*ÒP:<

SimpleName
internalRolerightOperand"LIMIT*¯P:*ÒP:>

SimpleName
internalRolerightOperand"isPrime*ÅP:*ÒP:V%¿
Block
internalRolebodyî
ExpressionStatement
internalRole
statements›

Assignment
internalRole
expression
operator=?

SimpleName
internalRoleleftHandSide"isPrime*êQ:É◊
InfixExpression
internalRolerightHandSide
operator!=¡
InfixExpression
operator%
internalRoleleftOperand9

SimpleName
internalRoleleftOperand"num*öQ::

SimpleName
internalRolerightOperand"div*†Q:*öQ:-D
NumberLiteral
internalRolerightOperand

token0*ßQ:v*öQ:Ñ*êQ:Ç:Ñ
ExpressionStatement
internalRole
statementsÕ

Assignment
internalRole
expression
operator+=;

SimpleName
internalRoleleftHandSide"div*ÆR:ÉF
NumberLiteral
internalRolerightHandSide

token2*µR:vÑ*ÆR:ÇÜÖ)::W_^:Un
ReturnStatement
internalRole
statements;

SimpleName
internalRole
expression"isPrime*«T::`:3_^*ÖK:E2’
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ÎX4
Modifier
internalRole	modifiers"static*ÚX8
PrimitiveType
internalRolereturnType2"int*˘X9

SimpleName
internalRolename"
numFactors*˝X:4∫
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*àX2

SimpleName
internalRolename"num*åX:7*àX:6ﬁ
Block
internalRolebodyÍ
AssertStatement
internalRole
statements…
InfixExpression
internalRole
expression
operator>=9

SimpleName
internalRoleleftOperand"num*ùY:D
NumberLiteral
internalRolerightOperand

token2*§Y:v*ùY:Í
InfixExpression
internalRolemessage
operator+g
StringLiteral
internalRoleleftOperand"."failed precondition. num must be >= 2. num: "*®Y:y:

SimpleName
internalRolerightOperand"num*ŸY:*®Y:):f¢
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*·Z≤
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*ÂZ:B
NumberLiteral
internalRoleinitializer

token0*ÓZ:vÚ
VariableDeclarationStatement
internalRole
statements3
Modifier
internalRole	modifiers"final*Ù[4
PrimitiveType
internalRoletype"double*˙[ 
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"SQRT*Å[:€
MethodInvocation
internalRoleinitializer9

SimpleName
internalRole
expression"Math*à[:h3

SimpleName
internalRolename"sqrt*ç[:i7

SimpleName
internalRole	arguments"num*í[:j:g¯

ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*ü\≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*£\:B
NumberLiteral

token1
internalRoleinitializer*ß\:v:Pæ
InfixExpression
operator<
internalRole
expression7

SimpleName
internalRoleleftOperand"i*™\:;

SimpleName
internalRolerightOperand"SQRT*Æ\:*™\:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*¥\:*¥\:R‚
Block
internalRolebodyΩ
IfStatement
internalRole
statements—
InfixExpression
internalRole
expression
operator==ø
InfixExpression
internalRoleleftOperand
operator%9

SimpleName
internalRoleleftOperand"num*¬]:8

SimpleName
internalRolerightOperand"i*»]:*¬]:-D
NumberLiteral
internalRolerightOperand

token0*Õ]:v*¬]:Gµ
Block
internalRolethenStatementá
ExpressionStatement
internalRole
statements–

Assignment
internalRole
expression
operator+=>

SimpleName
internalRoleleftHandSide"result*◊^:ÉF
NumberLiteral

token2
internalRolerightHandSide*·^:vÑ*◊^:ÇÜÖ)::H_^"if:F:S_^:O»
IfStatement
internalRole
statements‘
InfixExpression
internalRole
expression
operator==¬
InfixExpression
internalRoleleftOperand
operator%9

SimpleName
internalRoleleftOperand"num*ıa:;

SimpleName
internalRolerightOperand"SQRT*˚a:*ıa:-D
NumberLiteral
internalRolerightOperand

token0*Éa:v*ıa:GΩ
ExpressionStatement
internalRolethenStatementÇ
PostfixExpression
internalRole
expression
operator++7

SimpleName
internalRoleoperand"result*äb:*äb::H"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*ûc::`:3_^*ÎX:E2*::E::$