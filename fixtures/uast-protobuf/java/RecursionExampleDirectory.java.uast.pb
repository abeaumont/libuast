
CompilationUnit∑î
TypeDeclaration
	interfacefalse
internalRoletypes1
Modifier
internalRole	modifiers"public*F

SimpleName
internalRolename"RecursionExampleDirectory*:ï"
MethodDeclaration 
internalRolebodyDeclarations
constructorfalse3
Modifier
internalRole	modifiers"public*-7
PrimitiveType
internalRolereturnType2"int*45

SimpleName
internalRolename"getSize*8:4·
SingleVariableDeclaration
internalRole
parameters
varargsfalseZ

SimpleType
internalRoletype6

SimpleName
internalRolename"	Directory*@:1

SimpleName
internalRolename"dir*J:7*@:6¥
Block
internalRolebodyû
VariableDeclarationStatement
internalRole
statements0
PrimitiveType
internalRoletype"int*SØ
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"total*W:A
NumberLiteral
internalRoleinitializer

token0*_:v˝
VariableDeclarationStatement
internalRole
statements®
	ArrayType
internalRoletype\

SimpleType
internalRoleelementType1

SimpleName
internalRolename"File*y:'
	Dimension
internalRole
dimensionsï
VariableDeclarationFragment
internalRole	fragments3

SimpleName
internalRolename"files*Ä:•
MethodInvocation
internalRoleinitializer8

SimpleName
internalRole
expression"dir*à:h7

SimpleName
internalRolename"getFiles*å:i:gæ	
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*ü≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*£:B
NumberLiteral
internalRoleinitializer

token0*ß:v:P•
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*™:°
QualifiedName
internalRolerightOperand8

SimpleName
internalRole	qualifier"files*Æ:4

SimpleName
internalRolename"length*¥::*™:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*º:*º:R¡
ExpressionStatement
internalRolebodyè

Assignment
operator+=
internalRole
expression=

SimpleName
internalRoleleftHandSide"total*≈	:ÉÖ
MethodInvocation
internalRolerightHandSideî
ArrayAccess
internalRole
expression4

SimpleName
internalRolearray"files*Œ	:0

SimpleName
internalRoleindex"i*‘	::h6

SimpleName
internalRolename"getSize*◊	:i:gÑ*≈	:ÇÜÖ):S:OÅ
VariableDeclarationStatement
internalRole
statementsÆ
	ArrayType
internalRoletypeb

SimpleType
internalRoleelementType7

SimpleName
internalRolename"	Directory*í:'
	Dimension
internalRole
dimensionsì
VariableDeclarationFragment
internalRole	fragments2

SimpleName
internalRolename"subs*û:§
MethodInvocation
internalRoleinitializer8

SimpleName
internalRole
expression"dir*•:h6

SimpleName
internalRolename"getSubs*©:i:gª	
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*ª≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ø:B
NumberLiteral

token0
internalRoleinitializer*√:v:P§
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*∆:†
QualifiedName
internalRolerightOperand7

SimpleName
internalRole	qualifier"subs* :4

SimpleName
internalRolename"length*œ::*∆:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*◊:*◊:Rø
ExpressionStatement
internalRolebodyç

Assignment
operator+=
internalRole
expression=

SimpleName
internalRoleleftHandSide"total*‡:ÉÉ
MethodInvocation
internalRolerightHandSide6

SimpleName
internalRolename"getSize*È:ií
ArrayAccess
internalRole	arguments3

SimpleName
internalRolearray"subs*Ò:0

SimpleName
internalRoleindex"i*ˆ::j:gÑ*‡:ÇÜÖ):S:Ol
ReturnStatement
internalRole
statements9

SimpleName
internalRole
expression"total*ä::`:3_^*-:E2Ç
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ö4
Modifier
internalRole	modifiers"static*°9
PrimitiveType
internalRolereturnType2"void*®3

SimpleName
internalRolename"main*≠:4∂
SingleVariableDeclaration
internalRole
parameters
varargsfalse´
	ArrayType
internalRoletype_

SimpleType
internalRoleelementType4

SimpleName
internalRolename"String*≤:'
	Dimension
internalRole
dimensions3

SimpleName
internalRolename"args*ª:7*≤:6î
Block
internalRolebody∑
VariableDeclarationStatement
internalRole
statementsk

SimpleType
internalRoletypeG

SimpleName
internalRolename"RecursionExampleDirectory*≈:ç
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"r*ﬂ:°
ClassInstanceCreation
internalRoleinitializerk

SimpleType
internalRoletypeG

SimpleName
internalRolename"RecursionExampleDirectory*Á:ó
VariableDeclarationStatement
internalRole
statements[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Directory*á:˝
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"d*ë:ë
ClassInstanceCreation
internalRoleinitializer[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Directory*ô:õ
ExpressionStatement
internalRole
statements‰
MethodInvocation
internalRole
expressionù
QualifiedName
internalRole
expression9

SimpleName
internalRole	qualifier"System*©:1

SimpleName
internalRolename"out*∞::h6

SimpleName
internalRolename"println*¥:iÿ
MethodInvocation
internalRole	arguments6

SimpleName
internalRole
expression"r*Ω:h6

SimpleName
internalRolename"getSize*ø:i5

SimpleName
internalRole	arguments"d*«:j:jg:g::3_^*ö:E2´
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*Ê4
Modifier
internalRole	modifiers"static*Ì8
PrimitiveType
internalRolereturnType2"int*Ù3

SimpleName
internalRolename"fact*¯:4∏
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*˝0

SimpleName
internalRolename"n*Å:7*˝:6º
Block
internalRolebody¢
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*à≤
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*å:B
NumberLiteral
internalRoleinitializer

token0*ï:vÉ	
IfStatement
internalRole
statements»
InfixExpression
internalRole
expression
operator==7

SimpleName
internalRoleleftOperand"n*û:D
NumberLiteral
internalRolerightOperand

token0*£:v*û:GÖ
ExpressionStatement
internalRolethenStatement 

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*™:ÉF
NumberLiteral
internalRolerightHandSide

token1*≥:vÑ*™:Ç:H¸
ExpressionStatement
internalRoleelseStatement¡

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*¬:Éº
InfixExpression
internalRolerightHandSide
operator*7

SimpleName
internalRoleleftOperand"n*À:≥
MethodInvocation
internalRolerightOperand3

SimpleName
internalRolename"fact*œ:i«
InfixExpression
internalRole	arguments
operator-7

SimpleName
internalRoleleftOperand"n*‘:D
NumberLiteral

token1
internalRolerightOperand*÷:v*‘:j*:g*À:+Ñ*¬:Ç:I"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*‰ ::`:3_^*Ê:E2™
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*á$4
Modifier
internalRole	modifiers"static*é$8
PrimitiveType
internalRolereturnType2"int*ï$2

SimpleName
internalRolename"pow*ô$:4ª
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*ù$3

SimpleName
internalRolename"base*°$:7*ù$:6∫
SingleVariableDeclaration
varargsfalse
internalRole
parameters1
PrimitiveType
internalRoletype"int*ß$2

SimpleName
internalRolename"exp*´$:7*ß$:6¸
Block
internalRolebody¢
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*¥%≤
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*∏%:B
NumberLiteral
internalRoleinitializer

token0*¡%:v√	
IfStatement
internalRole
statements 
InfixExpression
internalRole
expression
operator==9

SimpleName
internalRoleleftOperand"exp* &:D
NumberLiteral
internalRolerightOperand

token0*—&:v* &:GÖ
ExpressionStatement
internalRolethenStatement 

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*ÿ':ÉF
NumberLiteral

token1
internalRolerightHandSide*·':vÑ*ÿ':Ç:H∫
ExpressionStatement
internalRoleelseStatementˇ

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*):É˙
InfixExpression
operator*
internalRolerightHandSide:

SimpleName
internalRoleleftOperand"base*˘):Ó
MethodInvocation
internalRolerightOperand2

SimpleName
internalRolename"pow*Ä):i8

SimpleName
internalRole	arguments"base*Ñ):j…
InfixExpression
internalRole	arguments
operator-9

SimpleName
internalRoleleftOperand"exp*ä):D
NumberLiteral

token1
internalRolerightOperand*ê):v*ä):j*:g*˘):+Ñ*):Ç:I"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*û*::`:3_^*á$:E2ø
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*Ã/4
Modifier
internalRole	modifiers"static*”/8
PrimitiveType
internalRolereturnType2"int*⁄/2

SimpleName
internalRolename"fib*ﬁ/:4∏
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*‚/0

SimpleName
internalRolename"n*Ê/:7*‚/:6—
Block
internalRolebody¢
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*Ì0≤
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*Ò0:B
NumberLiteral

token0
internalRoleinitializer*˙0:vò
IfStatement
internalRole
statements„
InfixExpression
operator||
internalRole
expression…
InfixExpression
internalRoleleftOperand
operator==7

SimpleName
internalRoleleftOperand"n*É1:D
NumberLiteral
internalRolerightOperand

token1*à1:v*É1: 
InfixExpression
internalRolerightOperand
operator==7

SimpleName
internalRoleleftOperand"n*ç1:D
NumberLiteral
internalRolerightOperand

token2*í1:v*ç1:*É1:G&Ö
ExpressionStatement
internalRolethenStatement 

Assignment
operator=
internalRole
expression>

SimpleName
internalRoleleftHandSide"result*ô2:ÉF
NumberLiteral
internalRolerightHandSide

token1*¢2:vÑ*ô2:Ç:Hˆ
ExpressionStatement
internalRoleelseStatementª

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*±4:É∂
InfixExpression
operator+
internalRolerightHandSide±
MethodInvocation
internalRoleleftOperand2

SimpleName
internalRolename"fib*∫4:i«
InfixExpression
internalRole	arguments
operator-7

SimpleName
internalRoleleftOperand"n*æ4:D
NumberLiteral
internalRolerightOperand

token1*¿4:v*æ4:j*:g≤
MethodInvocation
internalRolerightOperand2

SimpleName
internalRolename"fib*≈4:i«
InfixExpression
internalRole	arguments
operator-7

SimpleName
internalRoleleftOperand"n*…4:D
NumberLiteral
internalRolerightOperand

token2*À4:v*…4:j*:g*∫4:)Ñ*±4:Ç:I"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*Ÿ5::`:3_^*Ã/:E2ª)
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*Í84
Modifier
internalRole	modifiers"static*Ò88
PrimitiveType
internalRolereturnType2"int*¯88

SimpleName
internalRolename"	minWasted*¸8:4ê
SingleVariableDeclaration
internalRole
parameters
varargsfalseÑ
	ArrayType
internalRoletype8
PrimitiveType
internalRoleelementType"int*Ü	8'
	Dimension
internalRole
dimensions4

SimpleName
internalRolename"items*å	8:7*Ü	8:6æ
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*ì	86

SimpleName
internalRolename"itemNum*ó	8:7*ì	8:6æ
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*†	86

SimpleName
internalRolename"capLeft*§	8:7*†	8:6Ì!
Block
internalRolebody¢
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*±	9≤
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"result*µ	9:B
NumberLiteral

token0
internalRoleinitializer*æ	9:v¥
IfStatement
internalRole
statements¨
InfixExpression
internalRole
expression
operator>==

SimpleName
internalRoleleftOperand"itemNum*«	::°
QualifiedName
internalRolerightOperand8

SimpleName
internalRole	qualifier"items*“	::4

SimpleName
internalRolename"length*ÿ	:::*«	::Gˇ
ExpressionStatement
internalRolethenStatementƒ

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*‰	;:É@

SimpleName
internalRolerightHandSide"capLeft*Ì	;:Ñ*‰	;:Ç:Hœ
IfStatement
internalRoleelseStatementŒ
InfixExpression
operator==
internalRole
expression=

SimpleName
internalRoleleftOperand"capLeft*Ç
<:D
NumberLiteral
internalRolerightOperand

token0*ç
<:v*Ç
<:GÖ
ExpressionStatement
internalRolethenStatement 

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"result*î
=:ÉF
NumberLiteral
internalRolerightHandSide

token0*ù
=:vÑ*î
=:Ç:Hæ
Block
internalRoleelseStatementô
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*≠
?©
VariableDeclarationFragment
internalRole	fragments8

SimpleName
internalRolename"
minWithout*±
?:¥
MethodInvocation
internalRoleinitializer8

SimpleName
internalRolename"	minWasted*æ
?:i9

SimpleName
internalRole	arguments"items*»
?:jÕ
InfixExpression
operator+
internalRole	arguments=

SimpleName
internalRoleleftOperand"itemNum*œ
?:D
NumberLiteral
internalRolerightOperand

token1*Ÿ
?:v*œ
?:j);

SimpleName
internalRole	arguments"capLeft*‹
?:j:gÙ
IfStatement
internalRole
statementsß
InfixExpression
internalRole
expression
operator<==

SimpleName
internalRoleleftOperand"capLeft*Ó
@:ú
ArrayAccess
internalRolerightOperand4

SimpleName
internalRolearray"items*˘
@:6

SimpleName
internalRoleindex"itemNum*ˇ
@::*Ó
@:Gë
Block
internalRolethenStatementÇ
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*ëAí
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"minWith*ïA:†
MethodInvocation
internalRoleinitializer8

SimpleName
internalRolename"	minWasted*üA:i9

SimpleName
internalRole	arguments"items*©A:jÕ
InfixExpression
internalRole	arguments
operator+=

SimpleName
internalRoleleftOperand"itemNum*∞A:D
NumberLiteral
internalRolerightOperand

token1*∫A:v*∞A:j)¶
InfixExpression
internalRole	arguments
operator-=

SimpleName
internalRoleleftOperand"capLeft*ΩA:ú
ArrayAccess
internalRolerightOperand4

SimpleName
internalRolearray"items*«A:6

SimpleName
internalRoleindex"itemNum*ÕA::*ΩA:j*:gﬁ
ExpressionStatement
internalRole
statementsß

Assignment
operator=
internalRole
expression>

SimpleName
internalRoleleftHandSide"result*›B:É¢
MethodInvocation
internalRolerightHandSide9

SimpleName
internalRole
expression"Math*ÊB:h2

SimpleName
internalRolename"min*ÎB:i;

SimpleName
internalRole	arguments"minWith*ÔB:j>

SimpleName
internalRole	arguments"
minWithout*¯B:j:gÑ*›B:Ç::H_^Ç
ExpressionStatement
internalRoleelseStatement«

Assignment
operator=
internalRole
expression>

SimpleName
internalRoleleftHandSide"result*ôE:ÉC

SimpleName
internalRolerightHandSide"
minWithout*¢E:Ñ*ôE:Ç:I"if:F:I_^"if:IF"if:Fm
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"result*ΩG::`:3_^*Í8:E2*:E:˘9
TypeDeclaration
	interfacefalse
internalRoletypes7

SimpleName
internalRolename"	Directory*÷K:å
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*„LÆ
	ArrayType
internalRoletypeb

SimpleType
internalRoleelementType7

SimpleName
internalRolename"	Directory*ÎL:'
	Dimension
internalRole
dimensionsn
VariableDeclarationFragment
internalRole	fragments4

SimpleName
internalRolename"mySubs*˜L:à
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*ÅM©
	ArrayType
internalRoletype]

SimpleType
internalRoleelementType2

SimpleName
internalRolename"File*âM:'
	Dimension
internalRole
dimensionso
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"myFiles*êM:π*
MethodDeclaration
constructortrue 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ûO8

SimpleName
internalRolename"	Directory*•O:4Ò(
Block
internalRolebody≥
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*µP√
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"numSubs*πP:—
CastExpression
internalRoleinitializer1
PrimitiveType
internalRoletype"int*ƒPÓ
ParenthesizedExpression
internalRole
expression∂
InfixExpression
internalRole
expression
operator*•
MethodInvocation
internalRoleleftOperand9

SimpleName
internalRole
expression"Math*…P:h5

SimpleName
internalRolename"random*ŒP:i:gD
NumberLiteral
internalRolerightOperand

token3*ŸP:v*…P:+‹
ExpressionStatement
internalRole
statements•

Assignment
internalRole
expression
operator=>

SimpleName
internalRoleleftHandSide"mySubs*‡Q:É†
ArrayCreation
internalRolerightHandSideÆ
	ArrayType
internalRoletypeb

SimpleType
internalRoleelementType7

SimpleName
internalRolename"	Directory*ÌQ:'
	Dimension
internalRole
dimensions;

SimpleName
internalRole
dimensions"numSubs*˜Q::Ñ*‡Q:Ç:µ
VariableDeclarationStatement
internalRole
statements1
PrimitiveType
internalRoletype"int*ÑR≈
VariableDeclarationFragment
internalRole	fragments6

SimpleName
internalRolename"numFiles*àR:“
CastExpression
internalRoleinitializer1
PrimitiveType
internalRoletype"int*îRÔ
ParenthesizedExpression
internalRole
expression∑
InfixExpression
internalRole
expression
operator*•
MethodInvocation
internalRoleleftOperand9

SimpleName
internalRole
expression"Math*ôR:h5

SimpleName
internalRolename"random*ûR:i:gE
NumberLiteral
internalRolerightOperand
token10*©R:v*ôR:+Ÿ
ExpressionStatement
internalRole
statements¢

Assignment
internalRole
expression
operator=?

SimpleName
internalRoleleftHandSide"myFiles*±S:Éú
ArrayCreation
internalRolerightHandSide©
	ArrayType
internalRoletype]

SimpleType
internalRoleelementType2

SimpleName
internalRolename"File*øS:'
	Dimension
internalRole
dimensions<

SimpleName
internalRole
dimensions"numFiles*ƒS::Ñ*±S:Ç:˘
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*⁄U≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ﬁU:B
NumberLiteral
internalRoleinitializer

token0*‚U:v:Pß
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*ÂU:£
QualifiedName
internalRolerightOperand:

SimpleName
internalRole	qualifier"myFiles*ÈU:4

SimpleName
internalRolename"length*ÒU::*ÂU:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*˘U:*˘U:R˙
ExpressionStatement
internalRolebody»

Assignment
operator=
internalRole
expressionô
ArrayAccess
internalRoleleftHandSide6

SimpleName
internalRolearray"myFiles*ÇV:0

SimpleName
internalRoleindex"i*äV::ÉÁ
ClassInstanceCreation
internalRolerightHandSideV

SimpleType
internalRoletype2

SimpleName
internalRolename"File*ìV:“
CastExpression
internalRole	arguments1
PrimitiveType
internalRoletype"int*öVÒ
ParenthesizedExpression
internalRole
expressionπ
InfixExpression
internalRole
expression
operator*•
MethodInvocation
internalRoleleftOperand9

SimpleName
internalRole
expression"Math*üV:h5

SimpleName
internalRolename"random*§V:i:gG
NumberLiteral
token1000
internalRolerightOperand*ØV:v*üV:+:Ñ*ÇV:Ç:S:Oß	
ForStatement
internalRole
statements£
VariableDeclarationExpression
internalRoleinitializers1
PrimitiveType
internalRoletype"int*¿W≠
VariableDeclarationFragment
internalRole	fragments/

SimpleName
internalRolename"i*ƒW:B
NumberLiteral

token0
internalRoleinitializer*»W:v:P¶
InfixExpression
internalRole
expression
operator<7

SimpleName
internalRoleleftOperand"i*ÀW:¢
QualifiedName
internalRolerightOperand9

SimpleName
internalRole	qualifier"mySubs*œW:4

SimpleName
internalRolename"length*÷W::*ÀW:Q|
PostfixExpression
internalRoleupdaters
operator++2

SimpleName
internalRoleoperand"i*ﬁW:*ﬁW:R©
ExpressionStatement
internalRolebody˜

Assignment
internalRole
expression
operator=ò
ArrayAccess
internalRoleleftHandSide5

SimpleName
internalRolearray"mySubs*ÁX:0

SimpleName
internalRoleindex"i*ÓX::Éó
ClassInstanceCreation
internalRolerightHandSide[

SimpleType
internalRoletype7

SimpleName
internalRolename"	Directory*˜X::Ñ*ÁX:Ç:S:O:3_^*ûO:E2ê
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*ç[µ
	ArrayType
internalRolereturnType2b

SimpleType
internalRoleelementType7

SimpleName
internalRolename"	Directory*î[:'
	Dimension
internalRole
dimensions6

SimpleName
internalRolename"getSubs*†[:4ë
Block
internalRolebodym
ReturnStatement
internalRole
statements:

SimpleName
internalRole
expression"mySubs*µ\::`:3_^*ç[:E2ç
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*∆_∞
	ArrayType
internalRolereturnType2]

SimpleType
internalRoleelementType2

SimpleName
internalRolename"File*Õ_:'
	Dimension
internalRole
dimensions7

SimpleName
internalRolename"getFiles*‘_:4í
Block
internalRolebodyn
ReturnStatement
internalRole
statements;

SimpleName
internalRole
expression"myFiles*Í`::`:3_^*∆_:E2*–K:A:≈
TypeDeclaration
	interfacefalse
internalRoletypes2

SimpleName
internalRolename"File*Éd:è
FieldDeclaration 
internalRolebodyDeclarations5
Modifier
internalRole	modifiers"private*ãe1
PrimitiveType
internalRoletype"int*ìeo
VariableDeclarationFragment
internalRole	fragments5

SimpleName
internalRolename"iMySize*óe:ü
MethodDeclaration
constructortrue 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*§g3

SimpleName
internalRolename"File*´g:4ª
SingleVariableDeclaration
internalRole
parameters
varargsfalse1
PrimitiveType
internalRoletype"int*∞g3

SimpleName
internalRolename"size*¥g:7*∞g:6û
Block
internalRolebody˘
ExpressionStatement
internalRole
statements¬

Assignment
internalRole
expression
operator=?

SimpleName
internalRoleleftHandSide"iMySize*æh:É=

SimpleName
internalRolerightHandSide"size*»h:Ñ*æh:Ç::3_^*§g:E2ì
MethodDeclaration
constructorfalse 
internalRolebodyDeclarations4
Modifier
internalRole	modifiers"public*◊k8
PrimitiveType
internalRolereturnType2"int*ﬁk6

SimpleName
internalRolename"getSize*‚k:4í
Block
internalRolebodyn
ReturnStatement
internalRole
statements;

SimpleName
internalRole
expression"iMySize*˜l::`:3_^*◊k:E2*˝d:A::$